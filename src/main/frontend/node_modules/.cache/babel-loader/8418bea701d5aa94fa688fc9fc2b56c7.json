{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Angel\\\\Desktop\\\\hangman-master\\\\src\\\\main\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Angel\\\\Desktop\\\\hangman-master\\\\src\\\\main\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Angel\\\\Desktop\\\\hangman-master\\\\src\\\\main\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Angel\\\\Desktop\\\\hangman-master\\\\src\\\\main\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Angel\\\\Desktop\\\\hangman-master\\\\src\\\\main\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Angel\\\\Desktop\\\\hangman-master\\\\src\\\\main\\\\frontend\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"reactstrap\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      gameID: null,\n      maxTries: 10,\n      tries: 0,\n      charCount: 4,\n      firstChar: \"w\",\n      lastChar: \"d\",\n      current: \"word\",\n      gameState: 5,\n      // 1 = not started, 2 = started, 3 = won, 4 = lose, 5 = welcome\n      wordState: \"w**d\",\n      inputLetter: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.state.gameState === 5 ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Wellcome to Hangout\") : this.props.textOrHtml, this.state.gameState === 2 || this.state.gameState === 3 || this.state.gameState === 4 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"You have \", this.state.maxTries - this.state.tries, \" tries left\") : this.props.textOrHtml, this.state.gameState === 2 || this.state.gameState === 4 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.wordState) : this.props.textOrHtml, this.state.gameState === 3 || this.state.gameState === 4 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.current) : this.props.textOrHtml, this.renderSwitchWinLose(this.state.gameState), this.state.gameState === 1 || this.state.gameState === 3 || this.state.gameState === 4 || this.state.gameState === 5 ? React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.startNewGame();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Start new game\") : this.props.textOrHtml, this.state.gameState === 2 ? React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Guess a letter:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.inputLetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.tryLetter();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Try\")) : this.props.textOrHtml));\n    }\n  }, {\n    key: \"renderSwitchWinLose\",\n    value: function renderSwitchWinLose(param) {\n      switch (param) {\n        case 3:\n          return React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"You WON\");\n\n        case 4:\n          return React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"You LOST\");\n\n        default:\n          return this.props.textOrHtml;\n      }\n    }\n  }, {\n    key: \"startNewGame\",\n    value: function startNewGame() {\n      var _this3 = this;\n\n      fetch('http://localhost:8080/api/hangman/games', {\n        method: 'POST',\n        mode: 'cors'\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        return _this3.setState({\n          gameID: data.id,\n          maxTries: data.maxTries,\n          tries: data.tries,\n          charCount: data.charCount,\n          firstChar: data.firstChar,\n          lastChar: data.lastChar,\n          current: data.current,\n          gameState: 2,\n          wordState: data.wordState\n        });\n      });\n    }\n  }, {\n    key: \"tryLetter\",\n    value: function tryLetter() {\n      fetch('http://localhost:8080/api/hangman/games/' + this.state.gameID + '/try?character=' + this.state.inputLetter, {\n        method: 'POST',\n        mode: 'cors'\n      }).then(function (resp) {\n        return resp.json();\n      }).then(\n      /*data => this.setState({ \n        gameID: data.id, \n        maxTries: data.maxTries,\n        tries: data.tries,\n        charCount: data.charCount,\n        firstChar: data.firstChar,\n        lastChar: data.lastChar,\n        current: data.current,\n        gameState: 2,\n        wordState: data.wordState\n      })*/\n      function (data) {\n        return console.log(JSON.stringify(data));\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\n;\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["C:\\Users\\Angel\\Desktop\\hangman-master\\src\\main\\frontend\\src\\index.js"],"names":["React","ReactDOM","Button","App","props","state","gameID","maxTries","tries","charCount","firstChar","lastChar","current","gameState","wordState","inputLetter","textOrHtml","renderSwitchWinLose","startNewGame","tryLetter","param","fetch","method","mode","then","resp","json","data","setState","id","console","log","JSON","stringify","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"reactstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      gameID: null, \n      maxTries: 10,\n      tries: 0,\n      charCount: 4,\n      firstChar: \"w\",\n      lastChar: \"d\",\n      current: \"word\",\n      gameState: 5, // 1 = not started, 2 = started, 3 = won, 4 = lose, 5 = welcome\n      wordState: \"w**d\",\n      inputLetter: null\n    };\n  }\n\n  render(){\n    return (\n      <div>\n        <center>\n            {\n              this.state.gameState === 5\n                ? (<h1>Wellcome to Hangout</h1>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2 || this.state.gameState === 3 || this.state.gameState === 4\n                ? (<p>You have {this.state.maxTries-this.state.tries} tries left</p>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2 || this.state.gameState === 4\n                ? (<p>{this.state.wordState}</p>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 3 || this.state.gameState === 4\n                ? (<p>{this.state.current}</p>)\n                : this.props.textOrHtml\n            }\n\n            {this.renderSwitchWinLose(this.state.gameState)}\n\n            {\n              this.state.gameState === 1 || this.state.gameState === 3 || this.state.gameState === 4 || this.state.gameState === 5\n                ? (<Button onClick={() => this.startNewGame()}>Start new game</Button>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2\n                ? (<form>\n                Guess a letter:\n                <input type=\"text\" value={ this.state.inputLetter }></input>\n                <Button onClick={() => this.tryLetter()}>Try</Button>\n                </form>)\n                : this.props.textOrHtml\n            }\n        </center>\n      </div>\n    );\n  };\n\n  renderSwitchWinLose(param){\n    switch(param) {\n      case 3:\n        return <h3>You WON</h3>;\n      case 4:\n        return <h3>You LOST</h3>;\n      default:\n        return this.props.textOrHtml;\n    }\n  }\n\n  startNewGame(){\n    fetch('http://localhost:8080/api/hangman/games', {\n      method:'POST',\n      mode:'cors',\n    })\n    .then((resp) => resp.json())\n    .then(\n        data => this.setState({ \n          gameID: data.id, \n          maxTries: data.maxTries,\n          tries: data.tries,\n          charCount: data.charCount,\n          firstChar: data.firstChar,\n          lastChar: data.lastChar,\n          current: data.current,\n          gameState: 2,\n          wordState: data.wordState\n        })\n    );\n  };\n\n  tryLetter(){\n    fetch('http://localhost:8080/api/hangman/games/' + this.state.gameID + '/try?character=' + this.state.inputLetter, {\n      method:'POST',\n      mode:'cors'\n    })\n    .then((resp) => resp.json())\n    .then(\n        /*data => this.setState({ \n          gameID: data.id, \n          maxTries: data.maxTries,\n          tries: data.tries,\n          charCount: data.charCount,\n          firstChar: data.firstChar,\n          lastChar: data.lastChar,\n          current: data.current,\n          gameState: 2,\n          wordState: data.wordState\n        })*/\n        data => console.log(JSON.stringify(data))\n    );\n  };\n\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}