{"version":3,"sources":["index.js"],"names":["App","props","_this","Object","C_Users_Angel_Desktop_hangman_src_main_frontend_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Angel_Desktop_hangman_src_main_frontend_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Angel_Desktop_hangman_src_main_frontend_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","gameID","maxTries","tries","charCount","firstChar","lastChar","current","gameState","wordState","inputLetter","handleChange","bind","C_Users_Angel_Desktop_hangman_src_main_frontend_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","value","setState","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","textOrHtml","color","renderSwitchHangState","renderSwitchWinLose","reactstrap__WEBPACK_IMPORTED_MODULE_9__","onClick","startNewGame","type","onChange","e","target","tryLetter","src","_this3","fetch","method","mode","then","resp","json","data","id","_this4","checkGameInfo","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1a52780c.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"reactstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      gameID: null, \n      maxTries: 10,\n      tries: 0,\n      charCount: 4,\n      firstChar: \"w\",\n      lastChar: \"d\",\n      current: \"word\",\n      gameState: 5, // 1 = not started, 2 = started, 3 = won, 4 = lose, 5 = welcome\n      wordState: \"w**d\",\n      inputLetter: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  };\n\n  handleChange(value) {\n    this.setState({\n      inputLetter: value\n    });\n  };\n\n  render(){\n    return (\n      <div>\n        <center>\n            {\n              this.state.gameState === 5\n                ? (<h1>Wellcome to Hangout</h1>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2 || this.state.gameState === 3 || this.state.gameState === 4\n                ? (<p>You have {this.state.maxTries-this.state.tries} tries left</p>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2 || this.state.gameState === 4\n                ? (<p>{this.state.wordState}</p>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 3 || this.state.gameState === 4\n                ? (<p><font color='#0059b3'>{this.state.current}</font></p>)\n                : this.props.textOrHtml\n            }\n\n            {this.renderSwitchHangState(this.state.tries)}\n\n            {this.renderSwitchWinLose(this.state.gameState)}\n\n            {\n              this.state.gameState === 1 || this.state.gameState === 3 || this.state.gameState === 4 || this.state.gameState === 5\n                ? (<Button onClick={() => this.startNewGame()}>Start new game</Button>)\n                : this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2\n                ? (<form>\n                Aim letter:<br></br>\n                <input type=\"text\" value={this.state.inputLetter} onChange={(e) =>this.handleChange(e.target.value)} ></input><br></br>\n                <Button onClick={() => this.tryLetter()}>Submit</Button><br></br>\n                </form>)\n                : this.props.textOrHtml\n            }\n        </center>\n      </div>\n    );\n  };\n\n  renderSwitchHangState(tries){\n    switch(tries) {\n      case 1:\n        return <div><img src=\"Hangman-1.png\"></img><br></br></div>;\n      case 2:\n        return <div><img src=\"Hangman-2.png\"></img><br></br></div>;\n      case 3:\n        return <div><img src=\"Hangman-3.png\"></img><br></br></div>;\n      case 4:\n        return <div><img src=\"Hangman-4.png\"></img><br></br></div>;\n      case 5:\n        return <div><img src=\"Hangman-5.png\"></img><br></br></div>;\n      case 6:\n        return <div><img src=\"Hangman-6.png\"></img><br></br></div>;\n      default:\n        return <div><img src=\"Hangman-0.png\"></img><br></br></div>;\n    }\n  };\n\n  renderSwitchWinLose(gameState){\n    switch(gameState) {\n      case 3:\n        return <h3><font color='lime'>WIN</font></h3>;\n      case 4:\n        return <h3><font color='red'>LOSE</font></h3>;\n      default:\n        return this.props.textOrHtml;\n    }\n  };\n\n  startNewGame(){\n    fetch('http://localhost:8080/api/hangman/games', {\n      method:'POST',\n      mode:'cors',\n    })\n    .then((resp) => resp.json())\n    .then(\n        data => this.setState({ \n          gameID: data.id, \n          maxTries: data.maxTries,\n          tries: data.tries,\n          charCount: data.charCount,\n          firstChar: data.firstChar,\n          lastChar: data.lastChar,\n          current: data.current,\n          gameState: 2,\n          wordState: data.wordState\n        })\n    );\n  };\n\n  tryLetter(){\n    fetch('http://localhost:8080/api/hangman/games/' + this.state.gameID + '/try?character=' + this.state.inputLetter, {\n      method:'POST',\n      mode:'cors'\n    })\n    .then((resp) => resp.json())\n    .then(\n        data => this.setState({ \n          gameID: data.id, \n          maxTries: data.maxTries,\n          tries: data.tries,\n          charCount: data.charCount,\n          firstChar: data.firstChar,\n          lastChar: data.lastChar,\n          current: data.current,\n          wordState: data.wordState\n        })\n    )\n    .then(\n      this.checkGameInfo()\n    )\n  };\n\n  checkGameInfo(){\n    if(this.state.wordState === this.state.current){\n      this.setState({\n        gameState: 3\n      });\n    } else if(this.state.maxTries-this.state.tries===0){\n      this.setState({\n        gameState: 4\n      });\n    }\n  };\n\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}